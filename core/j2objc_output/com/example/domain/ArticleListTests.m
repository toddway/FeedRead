//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tway/dev/FeedRead/core/src/test/java/com/example/domain/ArticleListTests.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/example/domain/Article.h"
#include "com/example/domain/ArticleListInteractor.h"
#include "com/example/domain/ArticleListTests.h"
#include "com/example/domain/ArticleRepository.h"
#include "java/io/File.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/stubbing/OngoingStubbing.h"

@interface ComExampleDomainArticleListTests ()

- (id<JavaUtilList>)sampleArticleList1;

- (id<JavaUtilList>)sampleArticleList2;

@end

__attribute__((unused)) static id<JavaUtilList> ComExampleDomainArticleListTests_sampleArticleList1(ComExampleDomainArticleListTests *self);

__attribute__((unused)) static id<JavaUtilList> ComExampleDomainArticleListTests_sampleArticleList2(ComExampleDomainArticleListTests *self);

NSString *ComExampleDomainArticleListTests_URL_ = @"mock url";

@implementation ComExampleDomainArticleListTests

- (void)beforeEach {
  articleRepository_ = OrgMockitoMockito_mockWithIOSClass_(ComExampleDomainArticleRepository_class_());
  (void) [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<ComExampleDomainArticleRepository>) nil_chk(articleRepository_)) getArticlesWithNSString:ComExampleDomainArticleListTests_URL_]))) thenReturnWithId:ComExampleDomainArticleListTests_sampleArticleList1(self)];
  articleListInteractor_ = new_ComExampleDomainArticleListInteractor_initWithComExampleDomainArticleRepository_withJavaIoFile_(articleRepository_, new_JavaIoFile_initWithNSString_(@"/tmp/shelf"));
}

- (void)testGetArticles {
  id<JavaUtilList> articles = [((ComExampleDomainArticleListInteractor *) nil_chk(articleListInteractor_)) getWithNSString:ComExampleDomainArticleListTests_URL_];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk(articles)) size] <= 5);
  for (ComExampleDomainArticle * __strong article in articles) {
    [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[((ComExampleDomainArticle *) nil_chk(article)) description]];
  }
}

- (void)testGetArticleTitle {
  id<JavaUtilList> articles = [((ComExampleDomainArticleListInteractor *) nil_chk([((ComExampleDomainArticleListInteractor *) nil_chk(articleListInteractor_)) useCacheWithBoolean:NO])) getWithNSString:ComExampleDomainArticleListTests_URL_];
  OrgJunitAssert_assertEqualsWithId_withId_(((ComExampleDomainArticle *) nil_chk([((id<JavaUtilList>) nil_chk(articles)) getWithInt:0]))->title_, ((ComExampleDomainArticle *) nil_chk([((id<JavaUtilList>) nil_chk(ComExampleDomainArticleListTests_sampleArticleList1(self))) getWithInt:0]))->title_);
}

- (void)testGetArticleTitleIgnoringCache {
  [self testGetArticleTitle];
  (void) [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<ComExampleDomainArticleRepository>) nil_chk(articleRepository_)) getArticlesWithNSString:ComExampleDomainArticleListTests_URL_]))) thenReturnWithId:ComExampleDomainArticleListTests_sampleArticleList2(self)];
  id<JavaUtilList> articles = [((ComExampleDomainArticleListInteractor *) nil_chk([((ComExampleDomainArticleListInteractor *) nil_chk(articleListInteractor_)) useCacheWithBoolean:NO])) getWithNSString:ComExampleDomainArticleListTests_URL_];
  OrgJunitAssert_assertEqualsWithId_withId_(((ComExampleDomainArticle *) nil_chk([((id<JavaUtilList>) nil_chk(articles)) getWithInt:0]))->title_, ((ComExampleDomainArticle *) nil_chk([((id<JavaUtilList>) nil_chk(ComExampleDomainArticleListTests_sampleArticleList2(self))) getWithInt:0]))->title_);
}

- (id<JavaUtilList>)sampleArticleList1 {
  return ComExampleDomainArticleListTests_sampleArticleList1(self);
}

- (id<JavaUtilList>)sampleArticleList2 {
  return ComExampleDomainArticleListTests_sampleArticleList2(self);
}

- (instancetype)init {
  ComExampleDomainArticleListTests_init(self);
  return self;
}

+ (IOSObjectArray *)__annotations_beforeEach {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitBefore alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_testGetArticles {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_testGetArticleTitle {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_testGetArticleTitleIgnoringCache {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "beforeEach", NULL, "V", 0x1, NULL, NULL },
    { "testGetArticles", NULL, "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "testGetArticleTitle", NULL, "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "testGetArticleTitleIgnoringCache", NULL, "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "sampleArticleList1", NULL, "Ljava.util.List;", 0x2, NULL, NULL },
    { "sampleArticleList2", NULL, "Ljava.util.List;", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "articleListInteractor_", NULL, 0x0, "Lcom.example.domain.ArticleListInteractor;", NULL, NULL,  },
    { "articleRepository_", NULL, 0x0, "Lcom.example.domain.ArticleRepository;", NULL, NULL,  },
    { "URL_", NULL, 0x8, "Ljava.lang.String;", &ComExampleDomainArticleListTests_URL_, NULL,  },
  };
  static const J2ObjcClassInfo _ComExampleDomainArticleListTests = { 2, "ArticleListTests", "com.example.domain", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComExampleDomainArticleListTests;
}

@end

id<JavaUtilList> ComExampleDomainArticleListTests_sampleArticleList1(ComExampleDomainArticleListTests *self) {
  return JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ ComExampleDomainArticle_createWithNSString_withJavaUtilList_(@"First article", JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"android", @"test" } count:2 type:NSString_class_()])), ComExampleDomainArticle_createWithNSString_withJavaUtilList_(@"Second article", JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"test" } count:1 type:NSString_class_()])) } count:2 type:ComExampleDomainArticle_class_()]);
}

id<JavaUtilList> ComExampleDomainArticleListTests_sampleArticleList2(ComExampleDomainArticleListTests *self) {
  return JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ ComExampleDomainArticle_createWithNSString_withJavaUtilList_(@"New title", JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"android", @"test" } count:2 type:NSString_class_()])), ComExampleDomainArticle_createWithNSString_withJavaUtilList_(@"Second article", JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"test" } count:1 type:NSString_class_()])) } count:2 type:ComExampleDomainArticle_class_()]);
}

void ComExampleDomainArticleListTests_init(ComExampleDomainArticleListTests *self) {
  (void) NSObject_init(self);
}

ComExampleDomainArticleListTests *new_ComExampleDomainArticleListTests_init() {
  ComExampleDomainArticleListTests *self = [ComExampleDomainArticleListTests alloc];
  ComExampleDomainArticleListTests_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleDomainArticleListTests)
