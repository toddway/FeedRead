//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:/Users/tway/dev/FeedRead/core/libs/shelf.jar!com/toddway/shelf/FileStorage.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/toddway/shelf/FileStorage.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/BufferedOutputStream.h"
#include "java/io/BufferedReader.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/io/ObjectInput.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutput.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/List.h"

@interface ComToddwayShelfFileStorage ()

- (JavaIoFile *)getFileWithNSString:(NSString *)key;

@end

__attribute__((unused)) static JavaIoFile *ComToddwayShelfFileStorage_getFileWithNSString_(ComToddwayShelfFileStorage *self, NSString *key);

NSString *ComToddwayShelfFileStorage_EXT_ = @".obj";

@implementation ComToddwayShelfFileStorage

- (instancetype)initWithJavaIoFile:(JavaIoFile *)dir {
  ComToddwayShelfFileStorage_initWithJavaIoFile_(self, dir);
  return self;
}

- (JavaIoFile *)getFileWithNSString:(NSString *)key {
  return ComToddwayShelfFileStorage_getFileWithNSString_(self, key);
}

- (id)getWithNSString:(NSString *)key
         withIOSClass:(IOSClass *)type {
  if ([((JavaIoFile *) nil_chk(ComToddwayShelfFileStorage_getFileWithNSString_(self, key))) exists]) {
    @try {
      return ComToddwayShelfFileStorage_readObjectFileWithJavaIoFile_withIOSClass_(ComToddwayShelfFileStorage_getFileWithNSString_(self, key), type);
    }
    @catch (JavaLangClassNotFoundException *e) {
      [((JavaLangClassNotFoundException *) nil_chk(e)) printStackTrace];
    }
  }
  return nil;
}

- (jboolean)putWithNSString:(NSString *)key
                     withId:(id)value {
  @synchronized(self) {
    ComToddwayShelfFileStorage_writeObjectFileWithJavaIoFile_withId_(ComToddwayShelfFileStorage_getFileWithNSString_(self, key), value);
    return YES;
  }
}

- (jboolean)delete__WithNSString:(NSString *)key {
  return [((JavaIoFile *) nil_chk(ComToddwayShelfFileStorage_getFileWithNSString_(self, key))) delete__];
}

- (jboolean)containsWithNSString:(NSString *)key {
  return [((JavaIoFile *) nil_chk(ComToddwayShelfFileStorage_getFileWithNSString_(self, key))) exists];
}

- (jlong)lastModifiedWithNSString:(NSString *)key {
  return [((JavaIoFile *) nil_chk(ComToddwayShelfFileStorage_getFileWithNSString_(self, key))) lastModified];
}

- (id<JavaUtilList>)keysWithNSString:(NSString *)prefix {
  IOSObjectArray *files = [((JavaIoFile *) nil_chk(dir_)) listFiles];
  id<JavaUtilList> keys = new_JavaUtilArrayList_init();
  for (jint f = 0; f < ((IOSObjectArray *) nil_chk(files))->size_; f++) {
    NSString *filename = [((JavaIoFile *) nil_chk(IOSObjectArray_Get(files, f))) getName];
    jint doxIndex = [((NSString *) nil_chk(filename)) lastIndexOfString:@"."];
    if ([filename hasPrefix:prefix] && doxIndex > 0) {
      [keys addWithId:[filename substring:0 endIndex:doxIndex]];
    }
  }
  return keys;
}

+ (id)readObjectFileWithJavaIoFile:(JavaIoFile *)file
                      withIOSClass:(IOSClass *)clazz {
  return ComToddwayShelfFileStorage_readObjectFileWithJavaIoFile_withIOSClass_(file, clazz);
}

+ (void)writeObjectFileWithJavaIoFile:(JavaIoFile *)file
                               withId:(id)object {
  ComToddwayShelfFileStorage_writeObjectFileWithJavaIoFile_withId_(file, object);
}

+ (NSString *)readFileStringWithJavaIoFile:(JavaIoFile *)file {
  return ComToddwayShelfFileStorage_readFileStringWithJavaIoFile_(file);
}

+ (void)writeFileStringWithJavaIoFile:(JavaIoFile *)file
                         withNSString:(NSString *)fileString {
  ComToddwayShelfFileStorage_writeFileStringWithJavaIoFile_withNSString_(file, fileString);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoFile:", "FileStorage", NULL, 0x1, NULL, NULL },
    { "getFileWithNSString:", "getFile", "Ljava.io.File;", 0x2, NULL, NULL },
    { "getWithNSString:withIOSClass:", "get", "TT;", 0x1, "Ljava.io.IOException;", "<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;)TT;" },
    { "putWithNSString:withId:", "put", "Z", 0x21, "Ljava.io.IOException;", "<T:Ljava/lang/Object;>(Ljava/lang/String;TT;)Z" },
    { "delete__WithNSString:", "delete", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "containsWithNSString:", "contains", "Z", 0x1, NULL, NULL },
    { "lastModifiedWithNSString:", "lastModified", "J", 0x1, NULL, NULL },
    { "keysWithNSString:", "keys", "Ljava.util.List;", 0x1, NULL, NULL },
    { "readObjectFileWithJavaIoFile:withIOSClass:", "readObjectFile", "TT;", 0x9, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", "<T:Ljava/lang/Object;>(Ljava/io/File;Ljava/lang/Class<TT;>;)TT;" },
    { "writeObjectFileWithJavaIoFile:withId:", "writeObjectFile", "V", 0x9, "Ljava.io.IOException;", "<T:Ljava/lang/Object;>(Ljava/io/File;TT;)V" },
    { "readFileStringWithJavaIoFile:", "readFileString", "Ljava.lang.String;", 0x9, "Ljava.io.IOException;", NULL },
    { "writeFileStringWithJavaIoFile:withNSString:", "writeFileString", "V", 0x9, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dir_", NULL, 0x0, "Ljava.io.File;", NULL, NULL,  },
    { "EXT_", NULL, 0x8, "Ljava.lang.String;", &ComToddwayShelfFileStorage_EXT_, NULL,  },
  };
  static const J2ObjcClassInfo _ComToddwayShelfFileStorage = { 2, "FileStorage", "com.toddway.shelf", NULL, 0x1, 12, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComToddwayShelfFileStorage;
}

@end

void ComToddwayShelfFileStorage_initWithJavaIoFile_(ComToddwayShelfFileStorage *self, JavaIoFile *dir) {
  (void) NSObject_init(self);
  self->dir_ = dir;
  [((JavaIoFile *) nil_chk(dir)) mkdir];
}

ComToddwayShelfFileStorage *new_ComToddwayShelfFileStorage_initWithJavaIoFile_(JavaIoFile *dir) {
  ComToddwayShelfFileStorage *self = [ComToddwayShelfFileStorage alloc];
  ComToddwayShelfFileStorage_initWithJavaIoFile_(self, dir);
  return self;
}

JavaIoFile *ComToddwayShelfFileStorage_getFileWithNSString_(ComToddwayShelfFileStorage *self, NSString *key) {
  return new_JavaIoFile_initWithJavaIoFile_withNSString_(self->dir_, JreStrcat("$$", key, ComToddwayShelfFileStorage_EXT_));
}

id ComToddwayShelfFileStorage_readObjectFileWithJavaIoFile_withIOSClass_(JavaIoFile *file, IOSClass *clazz) {
  ComToddwayShelfFileStorage_initialize();
  id<JavaIoObjectInput> input = new_JavaIoObjectInputStream_initWithJavaIoInputStream_(new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(new_JavaIoFileInputStream_initWithJavaIoFile_(file)));
  return [((IOSClass *) nil_chk(clazz)) cast:[input readObject]];
}

void ComToddwayShelfFileStorage_writeObjectFileWithJavaIoFile_withId_(JavaIoFile *file, id object) {
  ComToddwayShelfFileStorage_initialize();
  id<JavaIoObjectOutput> output = new_JavaIoObjectOutputStream_initWithJavaIoOutputStream_(new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(new_JavaIoFileOutputStream_initWithJavaIoFile_(file)));
  [output writeObjectWithId:object];
  [output close];
}

NSString *ComToddwayShelfFileStorage_readFileStringWithJavaIoFile_(JavaIoFile *file) {
  ComToddwayShelfFileStorage_initialize();
  JavaIoBufferedReader *bufferedReader = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_(new_JavaIoFileInputStream_initWithJavaIoFile_(file)));
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  NSString *line;
  while ((line = [bufferedReader readLine]) != nil) {
    (void) [sb appendWithNSString:line];
  }
  return [sb description];
}

void ComToddwayShelfFileStorage_writeFileStringWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *fileString) {
  ComToddwayShelfFileStorage_initialize();
  [((JavaIoFile *) nil_chk(file)) setLastModifiedWithLong:[new_JavaUtilDate_init() getTime]];
  JavaIoFileOutputStream *outputStream = new_JavaIoFileOutputStream_initWithJavaIoFile_(file);
  [outputStream writeWithByteArray:[((NSString *) nil_chk(fileString)) getBytes]];
  [outputStream close];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComToddwayShelfFileStorage)
