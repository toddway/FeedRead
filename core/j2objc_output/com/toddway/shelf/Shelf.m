//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tway/dev/Shelf/shelf/src/main/java/com/toddway/shelf/Shelf.java
//


#include "J2ObjC_source.h"
#include "com/toddway/shelf/FileStorage.h"
#include "com/toddway/shelf/Shelf.h"
#include "com/toddway/shelf/ShelfItem.h"
#include "com/toddway/shelf/Storage.h"
#include "java/io/File.h"
#include "java/util/List.h"
#include "java/util/WeakHashMap.h"

@interface ComToddwayShelfShelf () {
 @public
  id<ComToddwayShelfStorage> storage_;
  JavaUtilWeakHashMap *items_;
}

@end

J2OBJC_FIELD_SETTER(ComToddwayShelfShelf, storage_, id<ComToddwayShelfStorage>)
J2OBJC_FIELD_SETTER(ComToddwayShelfShelf, items_, JavaUtilWeakHashMap *)

@implementation ComToddwayShelfShelf

- (instancetype)initWithJavaIoFile:(JavaIoFile *)dir {
  ComToddwayShelfShelf_initWithJavaIoFile_(self, dir);
  return self;
}

- (instancetype)initWithComToddwayShelfStorage:(id<ComToddwayShelfStorage>)storage {
  ComToddwayShelfShelf_initWithComToddwayShelfStorage_(self, storage);
  return self;
}

- (ComToddwayShelfShelfItem *)itemWithNSString:(NSString *)key {
  if (items_ != nil && [items_ containsKeyWithId:key]) {
    return (ComToddwayShelfShelfItem *) check_class_cast([items_ getWithId:key], [ComToddwayShelfShelfItem class]);
  }
  else {
    ComToddwayShelfShelfItem *item = new_ComToddwayShelfShelfItem_initWithComToddwayShelfStorage_withNSString_(storage_, key);
    if (items_ != nil) (void) [items_ putWithId:key withId:item];
    return item;
  }
}

- (id<JavaUtilList>)keysWithNSString:(NSString *)prefix {
  return [((id<ComToddwayShelfStorage>) nil_chk(storage_)) keysWithNSString:prefix];
}

- (void)clearWithNSString:(NSString *)prefix {
  for (NSString * __strong key in nil_chk([self keysWithNSString:prefix])) {
    [((ComToddwayShelfShelfItem *) nil_chk([self itemWithNSString:key])) clear];
    if (items_ != nil) (void) [items_ removeWithId:key];
  }
}

- (void)useWeakMapWithBoolean:(jboolean)useWeakMap {
  if (useWeakMap) items_ = new_JavaUtilWeakHashMap_init();
  else items_ = nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoFile:", "Shelf", NULL, 0x1, NULL, NULL },
    { "initWithComToddwayShelfStorage:", "Shelf", NULL, 0x1, NULL, NULL },
    { "itemWithNSString:", "item", "Lcom.toddway.shelf.ShelfItem;", 0x1, NULL, "<T:Ljava/lang/Object;>(Ljava/lang/String;)Lcom/toddway/shelf/ShelfItem<TT;>;" },
    { "keysWithNSString:", "keys", "Ljava.util.List;", 0x1, NULL, NULL },
    { "clearWithNSString:", "clear", "V", 0x1, NULL, NULL },
    { "useWeakMapWithBoolean:", "useWeakMap", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "storage_", NULL, 0x2, "Lcom.toddway.shelf.Storage;", NULL, NULL,  },
    { "items_", NULL, 0x2, "Ljava.util.WeakHashMap;", NULL, "Ljava/util/WeakHashMap<Ljava/lang/String;Ljava/lang/Object;>;",  },
  };
  static const J2ObjcClassInfo _ComToddwayShelfShelf = { 2, "Shelf", "com.toddway.shelf", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComToddwayShelfShelf;
}

@end

void ComToddwayShelfShelf_initWithJavaIoFile_(ComToddwayShelfShelf *self, JavaIoFile *dir) {
  (void) ComToddwayShelfShelf_initWithComToddwayShelfStorage_(self, new_ComToddwayShelfFileStorage_initWithJavaIoFile_(dir));
}

ComToddwayShelfShelf *new_ComToddwayShelfShelf_initWithJavaIoFile_(JavaIoFile *dir) {
  ComToddwayShelfShelf *self = [ComToddwayShelfShelf alloc];
  ComToddwayShelfShelf_initWithJavaIoFile_(self, dir);
  return self;
}

void ComToddwayShelfShelf_initWithComToddwayShelfStorage_(ComToddwayShelfShelf *self, id<ComToddwayShelfStorage> storage) {
  (void) NSObject_init(self);
  self->storage_ = storage;
}

ComToddwayShelfShelf *new_ComToddwayShelfShelf_initWithComToddwayShelfStorage_(id<ComToddwayShelfStorage> storage) {
  ComToddwayShelfShelf *self = [ComToddwayShelfShelf alloc];
  ComToddwayShelfShelf_initWithComToddwayShelfStorage_(self, storage);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComToddwayShelfShelf)
